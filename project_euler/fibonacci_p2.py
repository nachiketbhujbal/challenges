#!/usr/local/bin/python3
# date: 2020-03-05
# author: Nachiket Bhujbal
# Problem #2:
    '''
    Each new term in the Fibonacci sequence is generated by adding the
    previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do
    not exceed 4,000,000, find the sum of the even-valued terms.
    '''
# note: gentools in https://github.com/nachiketbhujbal/playground/py
import sys
import time
from gentools import custominput, customoutput, fibonacci

def sum_evenfibs_modulo(N):
    t0 = time.time()
    modsum = sum([x for x in fibonacci(N) if x % 2 == 0])
    customoutput('Modulo Division', N, modsum, t0)

def sum_evenfibs_bitwise(N):
    t0 = time.time()
    bitsum = sum([x for x in fibonacci(N) if x & 1 == 0])
    customoutput('Bitwise Division', N, bitsum, t0)

def main():
    N = custominput('upper bound')
    print('Summation of even terms in Fibonacci seq up to N = {}...'.format(N))
    sum_evenfibs_modulo(N=N)
    sum_evenfibs_bitwise(N=N)


if __name__ == '__main__':
    main()

